@settings(defaultLengthUnit = in)

slotDepth = 0.1
slotWidth = 0.21
millLength = 1
arborDiameter = .5
arborOffset = .625

// from freecad's solver
yRel008 = -0.00364214
xRel008 = 0.027
len001 = 0.063
yRel007 = -0.014
xRel007 = 0.088
yRel006 = -0.058
xRel006 = 0.048
yRel005 = -0.1
xRel005 = -0.041
yRel004 = -0.038
xRel004 = 0.055
yRel003 = -0.006
xRel003 = 0.022
yRel002 = 0.069
xRel002 = 0.116
yRel001 = .537
xRel001 = 0.035
toothSketch = startSketchOn(XY)
toothProfile = startProfile(toothSketch, at = [0, 0])
  |> line(end = [xRel001, yRel001])
  |> line(end = [xRel002, yRel002])
  |> line(end = [xRel003, yRel003])
  |> line(end = [xRel004, yRel004])
  |> line(end = [xRel005, yRel005])
  |> tangentialArc(end = [xRel006, yRel006])
  |> tangentialArc(end = [xRel007, yRel007], tag = $seg01)
  |> angledLine(angle = tangentToEnd(seg01), length = len001)
  |> tangentialArc(end = [xRel008, yRel008])
  |> line(endAbsolute = [profileStartX(%), profileStartY(%)])
  |> close()
tooth = extrude(toothProfile, length = -millLength, twistAngle = -360 / 8)

// not working
// solid001 = union([pattern001])

allTeeth = patternCircular3d(
  tooth,
  instances = 8,
  axis = Z,
  center = [0, 0, 0],
)

elbowPlane = offsetPlane(XY, offset = -arborOffset)
arborOppositeSketch = startSketchOn(elbowPlane)
arborOppositeProfile = circle(arborOppositeSketch, center = [0, 0], radius = 0.36)

arborOppositeHole = extrude(arborOppositeProfile, length = -arborDiameter)
arborSketch = startSketchOn(arborOppositeHole, face = END)
arborProfile = circle(arborSketch, center = [0, 0], radius = 0.25)

arborHole = extrude(arborProfile, length = millLength)

slotSketch = startSketchOn(YZ)
slotProfile = startProfile(slotSketch, at = [0, slotDepth])
  |> xLine(length = slotWidth / 2)
  |> yLine(length = -slotDepth * 2)
  |> xLine(length = -slotWidth)
  |> yLine(length = slotDepth * 2)
  |> line(endAbsolute = [profileStartX(%), profileStartY(%)])
  |> close()
slot = extrude(slotProfile, length = millLength, bidirectionalLength = millLength)

cutters = union([arborHole, slot])
solid001 = subtract(allTeeth, tools = [cutters])
